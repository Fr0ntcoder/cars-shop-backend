// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  name  String @unique
  email String @unique
  phone String @default("")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  password  String

  reviews    Review[]
  avatarPath String   @default("/uploads/default_avatar.png") @map("avatar_path")

  favorites Car[]
}

model Car {
  id          String   @id @map("id")
  name        String
  slug        String   @unique
  description String
  price       Int
  city        String
  volume      Int
  power       Int
  box         String
  engine      String
  drive       String
  class       String
  year        Int
  images      String[]

  brand      CarBrand? @relation(fields: [carBrandId], references: [id])
  carBrandId String?   @map("car_brand_id")

  category      CarCategory? @relation(fields: [carCategoryId], references: [id])
  carCategoryId String?      @map("car_category_id")

  reviews Review[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")
}

model CarBrand {
  id    String @id @map("id")
  name  String @unique
  slug  String @unique
  icon  String
  items Car[]
}

model CarCategory {
  id    String @id @map("id")
  name  String @unique
  slug  String @unique
  icon  String
  items Car[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  rating    Int
  text      String

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")

  car   Car?    @relation(fields: [carId], references: [id])
  carId String? @map("car_id")
}
